#include <dht11.h>
#include <RTClib.h>
#include <Wire.h>

/*
  # the sensor value description
  # 0  ~300     dry soil
  # 300~700     humid soil
  # 700~950     in water
*/

dht11 DHT;
#define DHT11_PIN 4                                        //define the Digital Pin for the Temp and Humid Sensor

RTC_DS1307 RTC;                                            //Real Time Clock

CRIT_LEVEL = 300;
MOIST_LEVEL = 650;

int Relay = 3;

//Infiltration variables

  int I;                                                     //Infiltration Rate
  int P;                                                     //Precipitation (value is ung water input)(unit is (kg water)/(kg soil)
  int E;                                                     //Evaporation Rate
  int ET;                                                    //Evapotranspiration Rate
  int SRO;                                                   //Surface Runoff Rate
  int GWF;                                                   //Groundwater Flow Rate

  // ***** Formula for Infiltration             I = P - E - ET +/- SRO +/- GWF

  // ***** Equate Formula                       P = I + E + ET -/+ SRO -/+ GWF

  //Soil Infiltration Rate Values:                           //Manually set depending on the type of soil
  //  Silty - 2.09 in/hr , 4.18 ft/day , 5.31 cm/hr
  //  Loam - 0.50 in/hr , 1.00 ft/day , 1.27 cm/hr
  
//Evaporation variables

  int h;                                                     //elevation in meters        ????
  int Tm;                                                    //Tl + 0.006h
  int Tl;                                                    //mean land surface temperature in Celsius (tempHumidSen1)
  int A;                                                     //latitude in degrees
  int Td;                                                    //mean dew point (air) temperature in Celsius (tempHumidSen2)
  int e;                                                     //difference of value per: day(1.7 mmday^(-1)), week(0.9), month(0.5), annual(0.3)

  // ***** Formula for Evaporation (m/hr)       E = {[700Tm / (100-A) + 15(Tl-Td)] e} / (80-Tl)

//Evapotranspiration          ???? dont know how to get value

//Surface Runoff  - No SRO since flat surface - value = 0
  
  SRO = 0;

//Groundwater Flow - No GWF since no excavation or any passage ng water below naman - value = 0
  
  GWF = 0;

void setupRealTimeClock(){                    //Setup RTC in setup void
  RTC.begin();                                            //Real time clock
  Wire.begin();
  
  if (! RTC.isrunning()) {
    Serial.println("RTC is NOT running");
  }
  
  DateTime now = RTC.now();                                   //Get RTC time
  DateTime compiled = DateTime(__DATE__, __TIME__);           //Get current/real time
  if (now.unixtime() < compiled.unixtime()) {                 //compare if RTC time is old/incorrect
    Serial.println("RTC is older than compile time! Updating");
    RTC.adjust(DateTime(__DATE__, __TIME__));                 //update if old
  }
  Serial.println("Setup complete.");

}

void getCurrentTime(){
  DateTime now = rtc.now();             // Read data from the RTC Chip

  Serial.print(now.year(), DEC); //
  Serial.print('/');
  Serial.print(now.month(), DEC);
  Serial.print('/');
  Serial.print(now.day(), DEC);
  Serial.print(' ');
  Serial.print(now.hour(), DEC);
  Serial.print(':');
  Serial.print(now.minute(), DEC);
  Serial.print(':');
  Serial.print(now.second(), DEC);
  Serial.println();
  
  delay(10000);
}

void timeIrrigate(int time){          //Irrigate based on time needed/given(mL/L per sec)
  digitalWrite(Relay, LOW); //Turn on relay
  delay(time);
  digitalWrite(Relay, HIGH);   //Turn off relay
}

void checkToIrrigate(int soilMoistAve, int CRIT_LEVEL){  //check average moisture readings and then irrigate for 5 seconds
if(soilMoistAve <= CRIT_LEVEL){
  Serial.println("the Soil is being irrigated right now...");
  timeIrrigate(5000);
}
}


// Start

void setup(){
  pinMode(13, OUTPUT);                                     //Set Pin13 as Output
  digitalWrite(13, HIGH);                                  //Set Pin13 High
  pinMode(Relay, OUTPUT);                                  //Set Pin3 as Output
  Serial.begin(57600);                                     //Data Rate in BPS
  
  
  
}

void loop(){
  //Start of Loop; Reading
  int soilMoistSen1 = analogRead(0);                       //Soil Moisture Sensor 1 READING
  int soilMoistSen2 = analogRead(1);                       //Soil Moisture Sensor 2 READING
  int soilMoistAve = (soilMoistSen1 + soilMoistSen2)/2;
  int tempHumidSen = DHT.read(DHT11_PIN);                  //Temp and Humid Sensor READING
  int tempHum
  
  Serial.println("***********************");               //separator
  
  Serial.print("Soil Moisture Sensor 1 Value: ");               
  Serial.println(soilMoistSen1);                           //Print value of SMS 1
  Serial.print("Soil Moisture Sensor 2 Value: ");                
  Serial.println(soilMoistSen2);                           //Print value of SMS 2
  
  switch (tempHumidSen){                                   //T&HS status
    case DHTLIB_OK:  
                Serial.println("T&HS status: OK"); 
                break;
    case DHTLIB_ERROR_CHECKSUM: 
                Serial.println("T&HS status: Checksum error"); 
                break;
    case DHTLIB_ERROR_TIMEOUT: 
                Serial.print("T&HS status: Time out error"); 
                break;
    default: 
                Serial.println("T&HS status: Unknown error"); 
                break;
  }
  
  Serial.print("Humidity: ");
  Serial.println(DHT.humidity,1);                            //Print value for Humidity ; 1 = Decimal
  Serial.print("Temperature: ");
  Serial.println(DHT.temperature,1);                         //Print value for Temperature ; 1 = Decimal
  
  Tl = tempHumidSen;
  
  Tm = Tl + 0.006h;                                          //Compute for Tm  
  E = ((700Tm / (100-A) + 15(Tl-Td)) e) / (80-Tl);           //Compute for Evaporation
  
  checkToIrrigate(soilMoistAve);
  
  delay(1000);                                               //Loop delay in ms ; 1000 = 1 sec
}
